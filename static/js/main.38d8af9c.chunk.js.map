{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleShowTodoModalClick","selectedTodoId","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","setSelectedOption","query","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseTodoModalClick","useState","user","setUser","isLoading","setIsLoading","selectedTodo","filter","useEffect","userId","foundUser","catch","error","Error","href","email","name","App","setTodos","selectedOption","isModalVisible","setIsModalVisible","setSelectedTodoId","todosFromServer","filteredByQuery","toLowerCase","includes","trim","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38d8af9c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleShowTodoModalClick: (todoId: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, handleShowTodoModalClick, selectedTodoId },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              {completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : (<td className=\"is-vcentered\" />)}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleShowTodoModalClick(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': id !== selectedTodoId,\n                      'fa-eye-slash': id === selectedTodoId,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setSelectedOption: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  { setSelectedOption, query, setQuery },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setSelectedOption(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  handleCloseTodoModalClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { todos, selectedTodoId, handleCloseTodoModalClick },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const selectedTodo = todos.filter(todo => todo.id === selectedTodoId)[0];\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(foundUser => setUser(foundUser))\n      .catch((error) => {\n        throw new Error(error);\n      });\n\n    if (user) {\n      setIsLoading(false);\n    }\n  }, [selectedTodo, user]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodoModalClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  function handleShowTodoModalClick(todoId: number) {\n    setIsModalVisible(true);\n    setSelectedTodoId(todoId);\n  }\n\n  function handleCloseTodoModalClick() {\n    setIsModalVisible(false);\n    setSelectedTodoId(0);\n  }\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => {\n      const filteredByQuery = todosFromServer\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase().trim()));\n\n      switch (selectedOption) {\n        case 'active':\n          setTodos(filteredByQuery.filter(todo => !todo.completed));\n          break;\n\n        case 'completed':\n          setTodos(filteredByQuery.filter(todo => todo.completed));\n          break;\n\n        default:\n          setTodos(filteredByQuery);\n      }\n    })\n      .catch((error) => {\n        throw new Error(error);\n      });\n\n    if (todos.length) {\n      setIsLoading(false);\n    }\n  }, [query, selectedOption, todos.length]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedOption={(value) => setSelectedOption(value)}\n                query={query}\n                setQuery={(value) => setQuery(value)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodoId={selectedTodoId}\n                    handleShowTodoModalClick={(todoId) => handleShowTodoModalClick(todoId)}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalVisible && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          handleCloseTodoModalClick={() => handleCloseTodoModalClick()}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}